function species_priors

% Estimate priors on F from stock assessments for a number of rockfish and other fish species


% Data from p. 7 of blue rockfish assessment
Blue_90s = [0.155 + 0.083 + 0;...
            0.121 + 0.058 + 0];
        
Blue_00s = [0.089 + 0.039 + 0.001;...
            0.062 + 0.015 + 0;...
            0.043 + 0.016 + 0;...
            0.051 + 0.013 + 0;...
            0.069 + 0.06 + 0;...
            0.045 + 0.009 + 0;...
            0.046 + 0.012 + 0;...
            0.087 + 0.011 + 0];
        
% Data from p. 5 of gopher rockfish assessment
Gopher_90s = [0.061 + 0.137;...
              0.085 + 0.14;...
              0.1 + 0.16;...
              0.095 + 0.191;...
              0.064 + 0.178;...
              0.098 + 0.091;...
              0.087 + 0.056;...
              0.064 + 0.049;...
              0.046 + 0.043];
          
Gopher_00s = [0.031 + 0.049;...
              0.035 + 0.079;...
              0.026 + 0.058;...
              0.01 + 0.102;...
              0.012 + 0.028];
% Data from p. 60 of lingcod assessment
Lingcod_90s = [0.2497+0.2190;...
               0.2017+0.2435;...
               0.1707+0.2597;...
               0.1986+0.1605;...
               0.1516+0.0822;...
               0.1297+0.0784;...
               0.1105+0.0992;...
               0.1141+0.0725;...
               0.0622+0.0722;...
               0.0526+0.0915];
               
Lingcod_00s = [0.0184+0.0471;...
               0.0172+0.0335;...
               0.0182+0.0876;...
               0.0088+0.1244;...
               0.0083+0.0118;...
               0.0061+0.0208;...
               0.0051+0.0206;...
               0.0057+0.0206;...
               0.0045+0.0051];          

% data from p. 5 of yellowtail assessment
Yellowtail_90s = [0.1365;...
                  0.2162;...
                  0.0609;...
                  0.0930;...
                  0.0743];
              
Yellowtail_00s = [0.0146;...
                  0.0214;...
                  0.0087;...
                  0.0012;...
                  0.0010;...
                  0.0008];

% data from p. 111 of Cope et al. data moderate assessment 
Copper_90s = [0.136;...
              0.147;...
              0.178;...
              0.184;...
              0.108;...
              0.087;...
              0.105;...
              0.106;...
              0.069;...
              0.060];
Copper_00s = [0.042;...
              0.036;...
              0.027;...
              0.026;...
              0.020;...
              0.034;...
              0.034;...
              0.037;...
              0.029;...
              0.033;...
              0.024;...
              0.024;...
              0.029;...
              0.024];

Vermilion_90s = [0.0695+0.0915+0.0025+0.05;...
                 0.1225+0.016+0.002+0.0705;...
                 0.101+0+0.0175+0.117;...
                 0.1585+0.022+0.0355+0.1245;...
                 0.1055+0.015+0.029+0.097;...
                 0.067+0.0165+0.0345+0.0555;...
                 0.0855+0.0135+0.022+0.036;...
                 0.08+0.01+0.03+0.0265;...
                 0.049+0.0085+0.057+0.0345;...
                 0.0325+0+0.0165+0.032];

Vermilion_00s = [0.0105+0+0.0015+0.0295;...
                 0.0075+0+0.0035+0.0275;...
                 0.0035+0+0+0.028;...
                 0.0035+0+0+0.0645;...
                 0.005+0+0+0.023];

Brown_90s = [0.190;...
             0.188;...
             0.158;...
             0.153;...
             0.085;...
             0.080;...
             0.106;...
             0.151;...
             0.100;...
             0.124];
         
Brown_00s = [0.099;...
             0.142;...
             0.090;...
             0.156;...
             0.055;...
             0.088;...
             0.076;...
             0.063;...
             0.058;...
             0.064;...
             0.071;...
             0.081;...
             0.067;...
             0.070];

Brown_90 = 0.190;
Brown_91 = 0.188;
Brown_92 = 0.158;
Brown_93 = 0.153;
Brown_94 = 0.085;
Brown_95 = 0.080;
Brown_96 = 0.106;
Brown_97 = 0.151;
Brown_98 = 0.100;
Brown_99 = 0.124;
Brown_00 = 0.099;
Brown_01 = 0.142;
Brown_02 = 0.090;
Brown_03 = 0.156;
Brown_04 = 0.055;
Brown_05 = 0.088;
Brown_06 = 0.076;
Brown_07 = 0.063;
Brown_08 = 0.058;
Brown_09 = 0.064;
Brown_10 = 0.071;
Brown_11 = 0.081;
Brown_12 = 0.067;
Brown_13 = 0.070; 

Bocaccio_00s = [0.0163;...
             0.0065;...
             0.0077;...
             0.0050;...
             0.0064;...
             0.0057;...
             0.0089;...
             0.0104;...
             0.0104;...
             0.0065];

Scorpion_90s = [0.129;...
                0.155;...
                0.180;...
                0.153;...
                0.254];

Scorpion_00s = [0.185;...
                0.175;...
                0.098;...
                0.085;...

                0.071];
% Blue calculation:
M = 0.14;  % natural mortality
H = Blue_90s; %harvest fraction
F0 = 0.1; % initial guess at F

% for h = 1:length(H)
%     Fx = @(F) abs((1-exp(-(F+M)))*(F/(F+M))-H); % function to be minimized
% F_Brown_13 = fminsearch(@(f) Fx(f), F0); % returns the value of F
% end

%per year

for h = 1:length(H)
    Fx = @(F) abs((1-exp(-(F+M)))*(F/(F+M))-H(h)); % function to be minimized
F_Blue_90s(h) = fminsearch(@(f) Fx(f), F0); % returns the value of F
end
        
H = Blue_00s; %harvest fraction

for h = 1:length(H)
    Fx = @(F) abs((1-exp(-(F+M)))*(F/(F+M))-H(h)); % function to be minimized
F_Blue_00s(h) = fminsearch(@(f) Fx(f), F0); % returns the value of F
end

% Gophers:
M = 0.2;  % natural mortality
H = Gopher_90s; %harvest fraction
F0 = 0.1; % initial guess at F

for h = 1:length(H)
    Fx = @(F) abs((1-exp(-(F+M)))*(F/(F+M))-H(h)); % function to be minimized
F_Gopher_90s(h) = fminsearch(@(f) Fx(f), F0); % returns the value of F
end
        
H = Gopher_00s; %harvest fraction

for h = 1:length(H)
    Fx = @(F) abs((1-exp(-(F+M)))*(F/(F+M))-H(h)); % function to be minimized
F_Gopher_00s(h) = fminsearch(@(f) Fx(f), F0); % returns the value of F
end

% Lingcod calculations:
M = 0.25;  % natural mortality
H = Lingcod_90s; %harvest fraction
F0 = 0.1; % initial guess at F

for h = 1:length(H)
    Fx = @(F) abs((1-exp(-(F+M)))*(F/(F+M))-H(h)); % function to be minimized
F_Lingcod_90s(h) = fminsearch(@(f) Fx(f), F0); % returns the value of F
end

H = Lingcod_00s;
for h = 1:length(H)
    Fx = @(F) abs((1-exp(-(F+M)))*(F/(F+M))-H(h)); % function to be minimized
F_Lingcod_00s(h) = fminsearch(@(f) Fx(f), F0); % returns the value of F
end

% Yellowtail calculations:
M = 0.11;  % natural mortality
H = Yellowtail_90s; %harvest fraction
F0 = 0.1; % initial guess at F

for h = 1:length(H)
    Fx = @(F) abs((1-exp(-(F+M)))*(F/(F+M))-H(h)); % function to be minimized
F_Yellowtail_90s(h) = fminsearch(@(f) Fx(f), F0); % returns the value of F
end
        
H = Yellowtail_00s; %harvest fraction

for h = 1:length(H)
    Fx = @(F) abs((1-exp(-(F+M)))*(F/(F+M))-H(h)); % function to be minimized
F_Yellowtail_00s(h) = fminsearch(@(f) Fx(f), F0); % returns the value of F
end

% Copper calculations:
M = 0.09;  % natural mortality
H = Copper_90s; %harvest fraction
F0 = 0.1; % initial guess at F

for h = 1:length(H)
    Fx = @(F) abs((1-exp(-(F+M)))*(F/(F+M))-H(h)); % function to be minimized
F_Copper_90s(h) = fminsearch(@(f) Fx(f), F0); % returns the value of F
end
        
H = Copper_00s; %harvest fraction

for h = 1:length(H)
    Fx = @(F) abs((1-exp(-(F+M)))*(F/(F+M))-H(h)); % function to be minimized
F_Copper_00s(h) = fminsearch(@(f) Fx(f), F0); % returns the value of F
end

% Vermilion calculations:
M = 0.1;  % natural mortality
H = Vermilion_90s; %harvest fraction
F0 = 0.1; % initial guess at F

for h = 1:length(H)
Fx = @(F) abs((1-exp(-(F+M)))*(F/(F+M))-H(h)); % function to be minimized
F_Vermilion_90s(h) = fminsearch(@(f) Fx(f), F0); % returns the value of F
end

H = Vermilion_00s; %harvest fraction

for h = 1:length(H)
Fx = @(F) abs((1-exp(-(F+M)))*(F/(F+M))-H(h)); % function to be minimized
F_Vermilion_00s(h) = fminsearch(@(f) Fx(f), F0); % returns the value of F
end

% Brown calculations:
M = 0.14;  % natural mortality
H = Brown_90s; %harvest fraction
F0 = 0.1; % initial guess at F

for h = 1:length(H)
Fx = @(F) abs((1-exp(-(F+M)))*(F/(F+M))-H(h)); % function to be minimized
F_Brown_90s(h) = fminsearch(@(f) Fx(f), F0); % returns the value of F
end

H = Brown_00s; %harvest fraction

for h = 1:length(H)
Fx = @(F) abs((1-exp(-(F+M)))*(F/(F+M))-H(h)); % function to be minimized
F_Brown_00s(h) = fminsearch(@(f) Fx(f), F0); % returns the value of F
end

% Bocaccio calculation:
M = 0.15;  % natural mortality
H = Bocaccio_00s; %harvest fraction
F0 = 0.1; % initial guess at F

for h = 1:length(H)
    Fx = @(F) abs((1-exp(-(F+M)))*(F/(F+M))-H(h)); % function to be minimized
F_Bocaccio_00s(h) = fminsearch(@(f) Fx(f), F0); % returns the value of F
end

% CA Scorpionfish calculations:
M = 0.25;  % natural mortality
H = Scorpion_90s; %harvest fraction
F0 = 0.1; % initial guess at F

for h = 1:length(H)
Fx = @(F) abs((1-exp(-(F+M)))*(F/(F+M))-H(h)); % function to be minimized
F_Scorpion_90s(h) = fminsearch(@(f) Fx(f), F0); % returns the value of F
end

H = Scorpion_00s; %harvest fraction

for h = 1:length(H)
Fx = @(F) abs((1-exp(-(F+M)))*(F/(F+M))-H(h)); % function to be minimized
F_Scorpion_00s(h) = fminsearch(@(f) Fx(f), F0); % returns the value of F
end

mean(F_Blue_90s)
std(F_Blue_90s)

mean(F_Blue_00s)
std(F_Blue_00s)

mean(F_Gopher_90s)
std(F_Gopher_90s)

mean(F_Gopher_00s)
std(F_Gopher_00s)

mean(F_Lingcod_90s)
std(F_Lingcod_90s)

mean(F_Lingcod_00s)
std(F_Lingcod_00s)

mean(F_Yellowtail_90s)
std(F_Yellowtail_90s)

mean(F_Yellowtail_00s)
std(F_Yellowtail_00s)

mean(F_Copper_90s)
std(F_Copper_90s)

mean(F_Copper_00s)
std(F_Copper_00s)

mean(F_Vermilion_90s)
std(F_Vermilion_90s)

mean(F_Vermilion_00s)
std(F_Vermilion_00s)

mean(F_Brown_90s)
std(F_Brown_90s)

mean(F_Brown_00s)
std(F_Brown_00s)

mean(F_Bocaccio_00s)
std(F_Bocaccio_00s)

mean(F_Scorpion_90s)
std(F_Scorpion_90s)

mean(F_Scorpion_00s)
std(F_Scorpion_00s)



          
              
              
